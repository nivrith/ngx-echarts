function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(n,t){for(var e=0;e<t.length;e++){var a=t[e];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(n,a.key,a)}}function _createClass(n,t,e){return t&&_defineProperties(n.prototype,t),e&&_defineProperties(n,e),n}(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{mNCz:function(n,t,e){"use strict";e.r(t),e.d(t,"DemoGlModule",(function(){return v}));var a,o=e("ofXK"),r=e("giWl"),s=e("PCNd"),i=e("tyNb"),c=e("fXoL"),p=e("jPNr"),l=e("yNE/"),b=e("5vDB"),m=e("oyxB"),d=e("lJxs"),u=e("tk/3"),f=e("7DxU"),h=((a=function(){function n(t){_classCallCheck(this,n),this.http=t,this.html=e("pCkh"),this.component=e("s5wW").default}return _createClass(n,[{key:"ngOnInit",value:function(){this.options=this.http.get("assets/data/life-expectancy-table.json",{responseType:"json"}).pipe(Object(d.a)((function(n){return{grid3D:{},tooltip:{},xAxis3D:{type:"category"},yAxis3D:{type:"category"},zAxis3D:{},visualMap:{max:1e8,dimension:"Population"},dataset:{dimensions:["Income","Life Expectancy","Population","Country",{name:"Year",type:"ordinal"}],source:n},series:[{type:"bar3D",shading:"lambert",encode:{x:"Year",y:"Country",z:"Life Expectancy",tooltip:[0,1,2,3,4]}}]}})))}}]),n}()).\u0275fac=function(n){return new(n||a)(c.Tb(u.b))},a.\u0275cmp=c.Nb({type:a,selectors:[["app-bar3d-dataset"]],decls:3,vars:5,consts:[["echarts","",1,"demo-chart-600",3,"options"],[3,"html","component"]],template:function(n,t){1&n&&(c.Ub(0,"div",0),c.lc(1,"async"),c.Ub(2,"code-block",1)),2&n&&(c.sc("options",c.mc(1,3,t.options)),c.Db(2),c.sc("html",t.html)("component",t.component))},directives:[r.a,f.a],pipes:[o.b],styles:[""]}),a);function y(n,t){1&n&&c.Ub(0,"app-bar3d-dataset")}var x,C,D,g=[{path:"",redirectTo:"bar3d",pathMatch:"full"},{path:"bar3d",component:(x=function n(){_classCallCheck(this,n)},x.\u0275fac=function(n){return new(n||x)},x.\u0275cmp=c.Nb({type:x,selectors:[["app-gl-bar3d"]],decls:13,vars:1,consts:[["nzTitle","3D Bar"],["nz-page-header-breadcrumb",""],["routerLink","/welcome"],[2,"margin-top","8px",3,"nzTabPosition"],["nzTitle","With Dataset"],["nz-tab",""]],template:function(n,t){1&n&&(c.Zb(0,"nz-page-header",0),c.Zb(1,"nz-breadcrumb",1),c.Zb(2,"nz-breadcrumb-item"),c.Zb(3,"a",2),c.Kc(4,"Home"),c.Yb(),c.Yb(),c.Zb(5,"nz-breadcrumb-item"),c.Kc(6,"GL"),c.Yb(),c.Zb(7,"nz-breadcrumb-item"),c.Kc(8,"3D Bar"),c.Yb(),c.Yb(),c.Yb(),c.Ub(9,"nz-divider"),c.Zb(10,"nz-tabset",3),c.Zb(11,"nz-tab",4),c.Ic(12,y,1,0,"ng-template",5),c.Yb(),c.Yb()),2&n&&(c.Db(10),c.sc("nzTabPosition","left"))},directives:[p.b,l.a,p.a,l.b,i.g,b.a,m.c,m.a,m.b,h],styles:[""]}),x)}],z=((D=function n(){_classCallCheck(this,n)}).\u0275mod=c.Rb({type:D}),D.\u0275inj=c.Qb({factory:function(n){return new(n||D)},imports:[[i.h.forChild(g)],i.h]}),D),v=((C=function n(){_classCallCheck(this,n)}).\u0275mod=c.Rb({type:C}),C.\u0275inj=c.Qb({factory:function(n){return new(n||C)},imports:[[o.c,s.a,r.b,z]]}),C)},pCkh:function(n,t){n.exports='\x3c!-- DEMO START --\x3e\n<div echarts [options]="options | async" class="demo-chart-600"></div>\n\x3c!-- DEMO END --\x3e\n\n<code-block\n  [html]="html"\n  [component]="component">\n</code-block>'},s5wW:function(n,t,e){"use strict";e.r(t),t.default="import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\ndeclare const require: any; // DEMO IGNORE\n\n@Component({\n  selector: 'app-bar3d-dataset',\n  templateUrl: './bar3d-dataset.component.html',\n  styleUrls: ['./bar3d-dataset.component.scss'],\n})\nexport class Bar3dDatasetComponent implements OnInit {\n  html = require('!!html-loader?-minimize!./bar3d-dataset.component.html'); // DEMO IGNORE\n  component = require('!!raw-loader!./bar3d-dataset.component.ts').default; // DEMO IGNORE\n  options: Observable<any>;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit(): void {\n    this.options = this.http\n      .get('assets/data/life-expectancy-table.json', { responseType: 'json' })\n      .pipe(\n        map((data) => ({\n          grid3D: {},\n          tooltip: {},\n          xAxis3D: {\n            type: 'category',\n          },\n          yAxis3D: {\n            type: 'category',\n          },\n          zAxis3D: {},\n          visualMap: {\n            max: 1e8,\n            dimension: 'Population',\n          },\n          dataset: {\n            dimensions: [\n              'Income',\n              'Life Expectancy',\n              'Population',\n              'Country',\n              { name: 'Year', type: 'ordinal' },\n            ],\n            source: data,\n          },\n          series: [\n            {\n              type: 'bar3D',\n              // symbolSize: symbolSize,\n              shading: 'lambert',\n              encode: {\n                x: 'Year',\n                y: 'Country',\n                z: 'Life Expectancy',\n                tooltip: [0, 1, 2, 3, 4],\n              },\n            },\n          ],\n        })),\n      );\n  }\n}\n"}}]);